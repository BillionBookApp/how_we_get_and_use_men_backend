const express = require('express');
const axios = require('axios');
const router = express.Router();
const AdminSettings = require('../models/AdminSettings'); // ✅ include this

// 🌍 Load Open Exchange env variables
const OPEN_EXCHANGE_API = process.env.OPEN_EXCHANGE_API || 'https://openexchangerates.org/api/latest.json';
const OPEN_EXCHANGE_RATES_APP_ID = process.env.OPEN_EXCHANGE_RATES_APP_ID;

const currencyMap = {
    AE: 'AED',
    AL: 'ALL',
    AM: 'AMD',
    AR: 'ARS',
    AU: 'AUD',
    AW: 'AWG',
    BB: 'BBD',
    BD: 'BDT',
    BH: 'BHD',
    BI: 'BIF',
    BM: 'BMD',
    BN: 'BND',
    BO: 'BOB',
    BS: 'BSD',
    BT: 'BTN',
    BW: 'BWP',
    BZ: 'BZD',
    CA: 'CAD',
    CH: 'CHF',
    CL: 'CLP',
    CN: 'CNY',
    CO: 'COP',
    CR: 'CRC',
    CU: 'CUP',
    CV: 'CVE',
    CZ: 'CZK',
    DJ: 'DJF',
    DK: 'DKK',
    DO: 'DOP',
    DZ: 'DZD',
    EG: 'EGP',
    ER: 'ERN',
    FJ: 'FJD',
    FK: 'FKP',
    GB: 'GBP',
    GI: 'GIP',
    GM: 'GMD',
    GN: 'GNF',
    GT: 'GTQ',
    GY: 'GYD',
    HK: 'HKD',
    HN: 'HNL',
    HR: 'HRK',
    HT: 'HTG',
    HU: 'HUF',
    ID: 'IDR',
    IL: 'ILS',
    IN: 'INR',
    IQ: 'IQD',
    IR: 'IRR',
    IS: 'ISK',
    JM: 'JMD',
    JO: 'JOD',
    JP: 'JPY',
    KE: 'KES',
    KG: 'KGS',
    KH: 'KHR',
    KM: 'KMF',
    KP: 'KPW',
    KR: 'KRW',
    KW: 'KWD',
    KY: 'KYD',
    KZ: 'KZT',
    LA: 'LAK',
    LB: 'LBP',
    LK: 'LKR',
    LR: 'LRD',
    LS: 'LSL',
    LY: 'LYD',
    MA: 'MAD',
    MD: 'MDL',
    MK: 'MKD',
    MM: 'MMK',
    MN: 'MNT',
    MO: 'MOP',
    MR: 'MRO',
    MU: 'MUR',
    MV: 'MVR',
    MW: 'MWK',
    MX: 'MXN',
    MY: 'MYR',
    NA: 'NAD',
    NG: 'NGN',
    NI: 'NIO',
    NO: 'NOK',
    NP: 'NPR',
    NZ: 'NZD',
    OM: 'OMR',
    PE: 'PEN',
    PG: 'PGK',
    PH: 'PHP',
    PK: 'PKR',
    PY: 'PYG',
    QA: 'QAR',
    RU: 'RUB',
    RW: 'RWF',
    SA: 'SAR',
    SB: 'SBD',
    SC: 'SCR',
    SE: 'SEK',
    SG: 'SGD',
    SH: 'SHP',
    SL: 'SLL',
    SO: 'SOS',
    SS: 'SSP',
    ST: 'STD',
    SV: 'SVC',
    SY: 'SYP',
    SZ: 'SZL',
    TH: 'THB',
    TN: 'TND',
    TO: 'TOP',
    TT: 'TTD',
    TZ: 'TZS',
    UG: 'UGX',
    US: 'USD',
    UY: 'UYU',
    UZ: 'UZS',
    VN: 'VND',
    VU: 'VUV',
    WS: 'WST',
    ZA: 'ZAR',
    AD: 'EUR',
    AF: 'AFN',
    AG: 'XCD',
    AI: 'XCD',
    AO: 'AOA',
    AQ: '',
    AS: 'USD',
    AT: 'EUR',
    AX: 'EUR',
    AZ: 'AZN',
    BA: 'BAM',
    BE: 'EUR',
    BF: 'XOF',
    BG: 'BGN',
    BJ: 'XOF',
    BL: 'EUR',
    BQ: 'USD',
    BR: 'BRL',
    BY: 'BYN',
    CD: 'CDF',
    CF: 'XAF',
    CG: 'XAF',
    CI: 'XOF',
    CK: 'NZD',
    CM: 'XAF',
    CW: 'ANG',
    CY: 'EUR',
    DE: 'EUR',
    DM: 'XCD',
    EC: 'USD',
    EE: 'EUR',
    EH: 'MAD',
    ES: 'EUR',
    ET: 'ETB',
    FI: 'EUR',
    FM: 'USD',
    FO: 'DKK',
    FR: 'EUR',
    GA: 'XAF',
    GD: 'XCD',
    GE: 'GEL',
    GG: 'GBP',
    GH: 'GHS',
    GL: 'DKK',
    GP: 'EUR',
    GQ: 'XAF',
    GR: 'EUR',
    GU: 'USD',
    GW: 'XOF',
    IE: 'EUR',
    IM: 'GBP',
    IO: 'USD',
    IT: 'EUR',
    JE: 'GBP',
    KI: 'AUD',
    KN: 'XCD',
    LC: 'XCD',
    LI: 'CHF',
    LT: 'EUR',
    LU: 'EUR',
    LV: 'EUR',
    MC: 'EUR',
    ME: 'EUR',
    MF: 'EUR',
    MG: 'MGA',
    MH: 'USD',
    ML: 'XOF',
    MQ: 'EUR',
    MS: 'XCD',
    MT: 'EUR',
    MZ: 'MZN',
    NC: 'XPF',
    NE: 'XOF',
    NL: 'EUR',
    NR: 'AUD',
    NU: 'NZD',
    PA: 'PAB',
    PF: 'XPF',
    PL: 'PLN',
    PM: 'EUR',
    PR: 'USD',
    PS: 'ILS',
    PT: 'EUR',
    PW: 'USD',
    RE: 'EUR',
    RO: 'RON',
    RS: 'RSD',
    SD: 'SDG',
    SI: 'EUR',
    SK: 'EUR',
    SM: 'EUR',
    SN: 'XOF',
    SR: 'SRD',
    SX: 'ANG',
    TC: 'USD',
    TD: 'XAF',
    TG: 'XOF',
    TJ: 'TJS',
    TK: 'NZD',
    TL: 'USD',
    TM: 'TMT',
    TR: 'TRY',
    TV: 'AUD',
    TW: 'TWD',
    UA: 'UAH',
    VA: 'EUR',
    VC: 'XCD',
    VE: 'VES',
    VG: 'USD',
    VI: 'USD',
    WF: 'XPF',
    YE: 'YER',
    YT: 'EUR',
    ZM: 'ZMW',
    ZW: 'ZWL',

    // Add more as needed
};

const currencySymbols = {
    AE: 'د.إ',
    AL: 'L',
    AM: '֏',
    AR: '$',
    AU: '$',
    AW: 'ƒ',
    BB: '$',
    BD: '৳',
    BH: '.د.ب',
    BI: 'FBu',
    BM: '$',
    BN: '$',
    BO: 'Bs.',
    BS: '$',
    BT: 'Nu.',
    BW: 'P',
    BZ: '$',
    CA: '$',
    CH: 'CHF',
    CL: '$',
    CN: '¥',
    CO: '$',
    CR: '₡',
    CU: '$',
    CV: '$',
    CZ: 'Kč',
    DJ: 'Fdj',
    DK: 'kr',
    DO: 'RD$',
    DZ: 'د.ج',
    EG: '£',
    ER: 'Nfk',
    FJ: '$',
    FK: '£',
    GB: '£',
    GI: '£',
    GM: 'D',
    GN: 'FG',
    GT: 'Q',
    GY: '$',
    HK: '$',
    HN: 'L',
    HR: 'kn',
    HT: 'G',
    HU: 'Ft',
    ID: 'Rp',
    IL: '₪',
    IN: '₹',
    IQ: 'ع.د',
    IR: '﷼',
    IS: 'kr',
    JM: 'J$',
    JO: 'د.ا',
    JP: '¥',
    KE: 'KSh',
    KG: 'с',
    KH: '៛',
    KM: 'Fr',
    KP: '₩',
    KR: '₩',
    KW: 'د.ك',
    KY: '$',
    KZ: '₸',
    LA: '₭',
    LB: 'ل.ل',
    LK: 'Rs',
    LR: '$',
    LS: 'L',
    LY: 'ل.د',
    MA: 'د.م.',
    MD: 'L',
    MK: 'ден',
    MM: 'Ks',
    MN: '₮',
    MO: 'P',
    MR: 'UM',
    MU: '₨',
    MV: 'ރ',
    MW: 'MK',
    MX: '$',
    MY: 'RM',
    NA: '$',
    NG: '₦',
    NI: 'C$',
    NO: 'kr',
    NP: '₨',
    NZ: '$',
    OM: 'ر.ع.',
    PE: 'S/',
    PG: 'K',
    PH: '₱',
    PK: '₨',
    PY: '₲',
    QA: 'ر.ق',
    RU: '₽',
    RW: 'FRw',
    SA: 'ر.س',
    SB: '\$',
    SC: '₨',
    SE: 'kr',
    SG: '\$',
    SH: '£',
    SL: 'Le',
    SO: 'S',
    SS: '£',
    ST: 'Db',
    SV: '\$',
    SY: '£',
    SZ: 'E',
    TH: '฿',
    TN: 'د.ت',
    TO: 'T$',
    TT: '\$',
    TZ: 'TSh',
    UG: 'USh',
    US: '\$',
    UY: '\$U',
    UZ: 'лв',
    VN: '₫',
    VU: 'VT',
    WS: 'WS$',
    ZA: 'R',
    AD: '€',
    AF: '؋',
    AG: '\$',
    AI: '\$',
    AO: 'Kz',
    AQ: '',
    AS: '\$',
    AT: '€',
    AX: '€',
    AZ: '₼',
    BA: 'KM',
    BE: '€',
    BF: 'CFA',
    BG: 'лв',
    BJ: 'CFA',
    BL: '€',
    BQ: '\$',
    BR: 'R\$',
    BY: 'Br',
    CD: 'FC',
    CF: 'CFA',
    CG: 'CFA',
    CI: 'CFA',
    CK: '\$',
    CM: 'CFA',
    CW: 'ƒ',
    CY: '€',
    DE: '€',
    DM: '\$',
    EC: '\$',
    EE: '€',
    EH: 'د.م.',
    ES: '€',
    ET: 'Br',
    FI: '€',
    FM: '\$',
    FO: 'kr',
    FR: '€',
    GA: 'CFA',
    GD: '\$',
    GE: '₾',
    GG: '£',
    GH: '₵',
    GL: 'kr',
    GP: '€',
    GQ: 'CFA',
    GR: '€',
    GU: '\$',
    GW: 'CFA',
    IE: '€',
    IM: '£',
    IO: '\$',
    IT: '€',
    JE: '£',
    KI: '\$',
    KN: '\$',
    LC: '\$',
    LI: 'CHF',
    LT: '€',
    LU: '€',
    LV: '€',
    MC: '€',
    ME: '€',
    MF: '€',
    MG: 'Ar',
    MH: '\$',
    ML: 'CFA',
    MQ: '€',
    MS: '\$',
    MT: '€',
    MZ: 'MT',
    NC: '₣',
    NE: 'CFA',
    NL: '€',
    NR: '\$',
    NU: '\$',
    PA: 'B/.',
    PF: '₣',
    PL: 'zł',
    PM: '€',
    PR: '\$',
    PS: '₪',
    PT: '€',
    PW: '\$',
    RE: '€',
    RO: 'lei',
    RS: 'дин',
    SD: '£',
    SI: '€',
    SK: '€',
    SM: '€',
    SN: 'CFA',
    SR: '\$',
    SX: 'ƒ',
    TC: '\$',
    TD: 'CFA',
    TG: 'CFA',
    TJ: 'ЅМ',
    TK: '\$',
    TL: '\$',
    TM: 'T',
    TR: '₺',
    TV: '\$',
    TW: 'NT\$',
    UA: '₴',
    VA: '€',
    VC: '\$',
    VE: 'Bs.',
    VG: '\$',
    VI: '\$',
    WF: '₣',
    YE: '﷼',
    YT: '€',
    ZM: 'ZK',
    ZW: 'Z$',
};

// 📈 GET /api/location/meta/:countryCode
// 📈 GET /api/location/meta/:countryCode
router.get('/meta/:countryCode', async (req, res) => {
    const code = req.params.countryCode.toUpperCase();
    const currency = currencyMap[code];
    const symbol = currencySymbols[code] || '$';

    if (!currency || currency.trim() === '') {
        return res.status(400).json({
            error: `Unsupported country code '${code}' or missing currency mapping.`,
        });
    }

    if (!OPEN_EXCHANGE_RATES_APP_ID) {
        return res.status(500).json({
            error: 'Open Exchange Rates APP ID is not set.',
        });
    }

    try {
        // ✅ 1. Fetch base price from AdminSettings
        const settings = await AdminSettings.findOne();
        const basePriceUSD = settings?.bookPriceUSD || 3.5;

        // ✅ 2. Get exchange rates
        const url = `${OPEN_EXCHANGE_API}?app_id=${OPEN_EXCHANGE_RATES_APP_ID}&base=USD`;
        const result = await axios.get(url);
        const rates = result?.data?.rates;

        console.log(`💱 Target Currency: ${currency}`);
        console.log(`🔎 Sample Rates:`, Object.keys(rates).slice(0, 10));

        if (!rates || typeof rates !== 'object') {
            console.error('Rates object missing:', result.data);
            return res.status(500).json({ error: 'Exchange rate data not available' });
        }

        const rate = rates[currency];

        if (!rate || isNaN(rate)) {
            console.warn(`Rate for ${currency} not found. Returning default USD price.`);
            return res.json({
                country: code,
                currency: 'USD',
                currency_symbol: '$',
                exchange_rate: 1,
                converted_price: basePriceUSD,
                note: 'Using default USD because conversion rate unavailable.',
            });
        }

        const converted = basePriceUSD * rate;

        return res.json({
            country: code,
            currency,
            currency_symbol: symbol,
            exchange_rate: rate,
            converted_price: parseFloat(converted.toFixed(2)),
            book_price_usd: basePriceUSD
        });
    } catch (err) {
        console.error('💥 Exchange rate fetch failed:', err.response?.data || err.message || err);
        return res.status(500).json({ error: 'Failed to fetch exchange rate' });
    }
});

module.exports = router;